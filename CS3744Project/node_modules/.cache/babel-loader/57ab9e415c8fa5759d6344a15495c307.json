{"ast":null,"code":"import { useGlobalObjectEventListener } from \"./useGlobalObjectEventListener\";\n/**\n *\n * useOnWindowResize hook\n *\n * Fires a callback when window resizes\n *\n * @param {Function} callback Callback to be called before unmount\n * @param {boolean} when When the handler should be applied\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n */\n\nfunction useOnWindowResize(callback, when, isLayoutEffect) {\n  if (when === void 0) {\n    when = true;\n  }\n\n  if (isLayoutEffect === void 0) {\n    isLayoutEffect = false;\n  }\n\n  useGlobalObjectEventListener(window, \"resize\", callback, {\n    passive: true\n  }, when, isLayoutEffect);\n}\n\nexport { useOnWindowResize };","map":{"version":3,"names":["useGlobalObjectEventListener","useOnWindowResize","callback","when","isLayoutEffect","window","passive"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useOnWindowResize.js"],"sourcesContent":["import { useGlobalObjectEventListener } from \"./useGlobalObjectEventListener\";\n/**\n *\n * useOnWindowResize hook\n *\n * Fires a callback when window resizes\n *\n * @param {Function} callback Callback to be called before unmount\n * @param {boolean} when When the handler should be applied\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n */\nfunction useOnWindowResize(callback, when, isLayoutEffect) {\n    if (when === void 0) { when = true; }\n    if (isLayoutEffect === void 0) { isLayoutEffect = false; }\n    useGlobalObjectEventListener(window, \"resize\", callback, { passive: true }, when, isLayoutEffect);\n}\nexport { useOnWindowResize };\n"],"mappings":"AAAA,SAASA,4BAAT,QAA6C,gCAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,cAA3C,EAA2D;EACvD,IAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;IAAEA,IAAI,GAAG,IAAP;EAAc;;EACrC,IAAIC,cAAc,KAAK,KAAK,CAA5B,EAA+B;IAAEA,cAAc,GAAG,KAAjB;EAAyB;;EAC1DJ,4BAA4B,CAACK,MAAD,EAAS,QAAT,EAAmBH,QAAnB,EAA6B;IAAEI,OAAO,EAAE;EAAX,CAA7B,EAAgDH,IAAhD,EAAsDC,cAAtD,CAA5B;AACH;;AACD,SAASH,iBAAT"},"metadata":{},"sourceType":"module"}