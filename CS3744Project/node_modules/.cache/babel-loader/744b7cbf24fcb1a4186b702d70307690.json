{"ast":null,"code":"function fetchFinanceSnippet() {\n  let margin = {\n    top: 10,\n    right: 20,\n    bottom: 40,\n    left: 60\n  };\n  d3.json(\"../rsc/finance.json\").then(data => {\n    let svg = d3.select(\"#fetch\").append('svg');\n    let pxX = 600 - margin.left - margin.right,\n        pxY = 300 - margin.top - margin.bottom;\n    svg = svg.attr('width', 600 + margin.left + margin.right).attr('height', +300 + margin.top + margin.bottom).style('background', 'lightgrey').append('g').attr('transform', `translate(${margin.left} ${margin.top + 50})`); // get values\n\n    let {\n      result\n    } = data.chart;\n    let {\n      timestamp,\n      comparisons\n    } = result[0];\n    let date = [];\n    timestamp.forEach(data => {\n      date.push(new Date(data * 1000));\n    });\n    date.unshift(new Date(date[0].getTime() - 24 * 60 * 700 * 1000));\n    date.push(new Date(date[date.length - 1].getTime() + 24 * 60 * 100 * 1000)); // Set scaling for time\n    // your x scalning value generator for time (x range mapping)\n\n    let scX = d3.scaleTime().domain([date[0], date[date.length - 1]]).range([0, pxX]); // get min and max values\n\n    let [minVal, maxVal] = [Infinity, -Infinity];\n    comparisons.forEach(tick => {\n      // get the max and min value for all values\n      tick.high.forEach(val => {\n        maxVal = Math.max(maxVal, val);\n        minVal = Math.min(minVal, val);\n      });\n    }); // your y scaling value generator for high (y range mapping)\n\n    let scY = d3.scaleLinear().domain([0, maxVal + 100]).range([pxY, 0]);\n    let color = ['red', 'blue', 'yellow', 'green']; // Some color to attach to each chart\n\n    comparisons.forEach((tick, idx) => {\n      let {\n        high,\n        symbol\n      } = tick;\n      let g = svg.append(\"g\");\n      g.selectAll('circle').data(high).enter();\n\n      for (let i = 1; i < high.length; i++) {\n        g.append('circle').attr('cx', scX(date[i])).attr('cy', scY(high[i])).attr('r', 2.5).attr('fill', color[idx]).attr('stroke', 'black').attr('stroke-width', 0.5).attr('opacity', 1);\n      }\n\n      for (let i = 2; i < high.length; i++) {\n        g.append('line').attr('x1', scX(date[i])).attr('y1', scY(high[i])).attr('x2', scX(date[i - 1])).attr('y2', scY(high[i - 1])).attr('stroke', color[idx]).attr('stroke-width', 0.75).attr('opacity', 1);\n      }\n\n      let toolTip = svg.append('text');\n      g.selectAll('circle').on('mouseover', function (e) {\n        let [x, y] = d3.pointer(e, this);\n        let yText = parseFloat(scY.invert(y)).toFixed(2);\n        toolTip.attr('x', x).attr('y', y).text(yText).attr('fill', 'black').attr('font-size', '12px').attr('opacity', 1);\n      }).on('mouseleave', function () {\n        setTimeout(() => {\n          toolTip.attr('opacity', 0);\n        }, 1000);\n      }); // Adding legends\n\n      g.append('text').attr('x', pxX + 20).attr('y', d => 200 - idx * 20).attr(\"fill\", color[idx]).text(symbol);\n    });\n    let axis = d3.axisRight(scY);\n    svg.append('g').call(axis);\n    axis = d3.axisTop(scX);\n    svg.append('g').attr('transform', `translate(0, ${pxY + 10})`).call(axis).selectAll('text').attr('transform', 'rotate(90)translate(20, 0)');\n    const xAxisGrid = d3.axisBottom(scX).tickSize(-pxX + 270).tickFormat('').ticks(10);\n    svg.append('g').attr('class', 'x, axis-grid').attr('transform', `translate(0, ${pxY})`).call(xAxisGrid);\n    const yAxisGrid = d3.axisLeft(scY).tickSize(-pxY - 270).tickFormat('').ticks(10);\n    svg.append('g').attr('class', 'y, axis-grid').call(yAxisGrid);\n  }).catch(err => console.log(err));\n}","map":{"version":3,"names":["fetchFinanceSnippet","margin","top","right","bottom","left","d3","json","then","data","svg","select","append","pxX","pxY","attr","style","result","chart","timestamp","comparisons","date","forEach","push","Date","unshift","getTime","length","scX","scaleTime","domain","range","minVal","maxVal","Infinity","tick","high","val","Math","max","min","scY","scaleLinear","color","idx","symbol","g","selectAll","enter","i","toolTip","on","e","x","y","pointer","yText","parseFloat","invert","toFixed","text","setTimeout","d","axis","axisRight","call","axisTop","xAxisGrid","axisBottom","tickSize","tickFormat","ticks","yAxisGrid","axisLeft","catch","err","console","log"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/src/components/hw4.js"],"sourcesContent":["\n\nfunction fetchFinanceSnippet(){\n    let margin ={top: 10, right: 20, bottom: 40, left: 60}\n    d3.json(\"../rsc/finance.json\").then(data=>{\n        let svg = d3.select(\"#fetch\").append('svg')\n\n        let pxX = 600 - margin.left - margin.right,\n            pxY = 300 - margin.top - margin.bottom\n            svg = svg.attr('width', 600 + margin.left + margin.right).attr('height',+\n            300 + margin.top + margin.bottom)\n            .style('background', 'lightgrey')\n            .append('g')\n            .attr('transform', `translate(${margin.left} ${margin.top + 50})`)\n\n        // get values\n        let {result} = data.chart\n        let {timestamp, comparisons} = result[0]\n        let date = []\n        timestamp.forEach(data=> {\n            date.push(new Date(data*1000))\n        })\n\n        date.unshift(new Date(date[0].getTime() - (24*60*700*1000)))\n        date.push(new Date(date[date.length - 1].getTime() + (24*60*100*1000)))\n        // Set scaling for time\n        // your x scalning value generator for time (x range mapping)\n        let scX = d3.scaleTime().domain([date[0], date[date.length - 1]]).range([0, pxX])\n\n        // get min and max values\n        let [minVal, maxVal] = [Infinity, -Infinity]\n        comparisons.forEach(tick=>{\n            // get the max and min value for all values\n            tick.high.forEach(val=>{\n                    maxVal = Math.max(maxVal, val)\n                    minVal = Math.min(minVal, val)\n                }\n            )\n        })\n         // your y scaling value generator for high (y range mapping)\n        let scY = d3.scaleLinear().domain([0, maxVal + 100]).range([pxY, 0])\n        let color = ['red', 'blue', 'yellow', 'green']  // Some color to attach to each chart\n\n        comparisons.forEach((tick, idx)=>{\n            let {high,symbol} = tick\n            let g = svg.append(\"g\")\n            g.selectAll('circle')\n                .data(high)\n                .enter()\n            for (let i = 1; i < high.length; i++) {\n                g.append('circle')\n                    .attr('cx', scX(date[i]))\n                    .attr('cy', scY(high[i]))\n                    .attr('r', 2.5)\n                    .attr('fill', color[idx])\n                    .attr('stroke', 'black')\n                    .attr('stroke-width', 0.5)\n                    .attr('opacity', 1)\n\n            }\n\n            for (let i = 2; i < high.length; i++) {\n                g.append('line')\n                    .attr('x1', scX(date[i]))\n                    .attr('y1', scY(high[i]))\n                    .attr('x2', scX(date[i - 1]))\n                    .attr('y2', scY(high[i - 1]))\n                    .attr('stroke', color[idx])\n                    .attr('stroke-width', 0.75)\n                    .attr('opacity', 1)\n            }\n\n            let toolTip = svg.append('text') \n            g.selectAll('circle')\n                .on('mouseover', function(e){\n                    let [x, y] = d3.pointer(e, this)\n                    let yText = parseFloat(scY.invert(y)).toFixed(2);\n                    toolTip.attr('x', x)\n                        .attr('y', y)\n                        .text(yText)\n                        .attr('fill', 'black')\n                        .attr('font-size', '12px')\n                        .attr('opacity', 1)\n                    })\n                .on('mouseleave', function(){\n                        setTimeout(()=>{\n                            toolTip.attr('opacity', 0)\n                        }, 1000)\n                    })\n            // Adding legends\n            g.append('text')\n                .attr('x', pxX + 20)\n                .attr('y', d=>200 - idx * 20)\n                .attr(\"fill\", color[idx])\n                .text(symbol)\n        })\n\n        let axis = d3.axisRight(scY)\n        svg.append('g').call(axis)\n        axis = d3.axisTop(scX)\n        svg.append('g')\n            .attr('transform', `translate(0, ${pxY + 10})`)\n            .call(axis)\n            .selectAll('text')\n            .attr('transform', 'rotate(90)translate(20, 0)')\n\n        const xAxisGrid = d3.axisBottom(scX).tickSize(-pxX+270).tickFormat('').ticks(10);\n        svg.append('g')\n            .attr('class','x, axis-grid')\n            .attr('transform', `translate(0, ${pxY})`).call(xAxisGrid)\n\n        const yAxisGrid = d3.axisLeft(scY).tickSize(-pxY-270).tickFormat('').ticks(10);\n        svg.append('g')\n            .attr('class','y, axis-grid')\n            .call(yAxisGrid)\n    }).catch(err=>console.log(err))\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}