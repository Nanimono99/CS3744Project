{"ast":null,"code":"import { useRef, useEffect } from \"react\";\n/**\n * A setInterval hook that calls a callback after a interval duration\n * when a condition is true\n *\n * @param cb The callback to be invoked after interval\n * @param intervalDurationMs Amount of time in ms after which to invoke\n * @param when The condition which when true, sets the interval\n * @param startImmediate If the callback should be invoked immediately\n */\n\nfunction useIntervalWhen(callback_, intervalDurationMs, when, startImmediate) {\n  if (intervalDurationMs === void 0) {\n    intervalDurationMs = 0;\n  }\n\n  if (when === void 0) {\n    when = true;\n  }\n\n  if (startImmediate === void 0) {\n    startImmediate = false;\n  }\n\n  var savedRefCallback = useRef();\n  useEffect(function () {\n    savedRefCallback.current = callback_;\n  });\n\n  function callback() {\n    savedRefCallback.current && savedRefCallback.current();\n  }\n\n  useEffect(function () {\n    if (typeof window !== \"undefined\") {\n      if (when) {\n        if (startImmediate) {\n          callback();\n        }\n\n        var interval_1 = window.setInterval(callback, intervalDurationMs);\n        return function () {\n          window.clearInterval(interval_1);\n        };\n      }\n    } else {\n      console.warn(\"useIntervalWhen: window is undefined.\");\n    }\n  }, [when, intervalDurationMs]);\n}\n\nexport { useIntervalWhen };","map":{"version":3,"names":["useRef","useEffect","useIntervalWhen","callback_","intervalDurationMs","when","startImmediate","savedRefCallback","current","callback","window","interval_1","setInterval","clearInterval","console","warn"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useIntervalWhen.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\n/**\n * A setInterval hook that calls a callback after a interval duration\n * when a condition is true\n *\n * @param cb The callback to be invoked after interval\n * @param intervalDurationMs Amount of time in ms after which to invoke\n * @param when The condition which when true, sets the interval\n * @param startImmediate If the callback should be invoked immediately\n */\nfunction useIntervalWhen(callback_, intervalDurationMs, when, startImmediate) {\n    if (intervalDurationMs === void 0) { intervalDurationMs = 0; }\n    if (when === void 0) { when = true; }\n    if (startImmediate === void 0) { startImmediate = false; }\n    var savedRefCallback = useRef();\n    useEffect(function () {\n        savedRefCallback.current = callback_;\n    });\n    function callback() {\n        savedRefCallback.current && savedRefCallback.current();\n    }\n    useEffect(function () {\n        if (typeof window !== \"undefined\") {\n            if (when) {\n                if (startImmediate) {\n                    callback();\n                }\n                var interval_1 = window.setInterval(callback, intervalDurationMs);\n                return function () {\n                    window.clearInterval(interval_1);\n                };\n            }\n        }\n        else {\n            console.warn(\"useIntervalWhen: window is undefined.\");\n        }\n    }, [when, intervalDurationMs]);\n}\nexport { useIntervalWhen };\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,kBAApC,EAAwDC,IAAxD,EAA8DC,cAA9D,EAA8E;EAC1E,IAAIF,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;IAAEA,kBAAkB,GAAG,CAArB;EAAyB;;EAC9D,IAAIC,IAAI,KAAK,KAAK,CAAlB,EAAqB;IAAEA,IAAI,GAAG,IAAP;EAAc;;EACrC,IAAIC,cAAc,KAAK,KAAK,CAA5B,EAA+B;IAAEA,cAAc,GAAG,KAAjB;EAAyB;;EAC1D,IAAIC,gBAAgB,GAAGP,MAAM,EAA7B;EACAC,SAAS,CAAC,YAAY;IAClBM,gBAAgB,CAACC,OAAjB,GAA2BL,SAA3B;EACH,CAFQ,CAAT;;EAGA,SAASM,QAAT,GAAoB;IAChBF,gBAAgB,CAACC,OAAjB,IAA4BD,gBAAgB,CAACC,OAAjB,EAA5B;EACH;;EACDP,SAAS,CAAC,YAAY;IAClB,IAAI,OAAOS,MAAP,KAAkB,WAAtB,EAAmC;MAC/B,IAAIL,IAAJ,EAAU;QACN,IAAIC,cAAJ,EAAoB;UAChBG,QAAQ;QACX;;QACD,IAAIE,UAAU,GAAGD,MAAM,CAACE,WAAP,CAAmBH,QAAnB,EAA6BL,kBAA7B,CAAjB;QACA,OAAO,YAAY;UACfM,MAAM,CAACG,aAAP,CAAqBF,UAArB;QACH,CAFD;MAGH;IACJ,CAVD,MAWK;MACDG,OAAO,CAACC,IAAR,CAAa,uCAAb;IACH;EACJ,CAfQ,EAeN,CAACV,IAAD,EAAOD,kBAAP,CAfM,CAAT;AAgBH;;AACD,SAASF,eAAT"},"metadata":{},"sourceType":"module"}