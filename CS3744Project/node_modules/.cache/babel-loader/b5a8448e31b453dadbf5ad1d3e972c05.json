{"ast":null,"code":"import { useState, useEffect } from \"react\";\n/**\n *\n * @returns {boolean} Is navigator online\n */\n\nfunction getIsOnline() {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n\n  return navigator.onLine;\n}\n/**\n * useOnline hook\n *\n * Returns true if navigator is online, false if not.\n *\n * @returns {boolean} The value of navigator.onLine\n */\n\n\nfunction useOnline() {\n  var _a = useState(function () {\n    return getIsOnline();\n  }),\n      online = _a[0],\n      changeOnline = _a[1];\n\n  function setOffline() {\n    changeOnline(false);\n  }\n\n  function setOnline() {\n    changeOnline(true);\n  } // we only needs this to be set on mount\n  // hence []\n\n\n  useEffect(function () {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"online\", setOnline);\n      window.addEventListener(\"offline\", setOffline);\n      return function () {\n        window.removeEventListener(\"online\", setOnline);\n        window.removeEventListener(\"offline\", setOffline);\n      };\n    } else {\n      console.warn(\"useOnline: window is undefined.\");\n    }\n  }, []);\n  return online;\n}\n\nexport { useOnline };","map":{"version":3,"names":["useState","useEffect","getIsOnline","window","navigator","onLine","useOnline","_a","online","changeOnline","setOffline","setOnline","addEventListener","removeEventListener","console","warn"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useOnline.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n/**\n *\n * @returns {boolean} Is navigator online\n */\nfunction getIsOnline() {\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    return navigator.onLine;\n}\n/**\n * useOnline hook\n *\n * Returns true if navigator is online, false if not.\n *\n * @returns {boolean} The value of navigator.onLine\n */\nfunction useOnline() {\n    var _a = useState(function () { return getIsOnline(); }), online = _a[0], changeOnline = _a[1];\n    function setOffline() {\n        changeOnline(false);\n    }\n    function setOnline() {\n        changeOnline(true);\n    }\n    // we only needs this to be set on mount\n    // hence []\n    useEffect(function () {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"online\", setOnline);\n            window.addEventListener(\"offline\", setOffline);\n            return function () {\n                window.removeEventListener(\"online\", setOnline);\n                window.removeEventListener(\"offline\", setOffline);\n            };\n        }\n        else {\n            console.warn(\"useOnline: window is undefined.\");\n        }\n    }, []);\n    return online;\n}\nexport { useOnline };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,GAAuB;EACnB,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;IAC/B,OAAO,IAAP;EACH;;EACD,OAAOC,SAAS,CAACC,MAAjB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,GAAqB;EACjB,IAAIC,EAAE,GAAGP,QAAQ,CAAC,YAAY;IAAE,OAAOE,WAAW,EAAlB;EAAuB,CAAtC,CAAjB;EAAA,IAA0DM,MAAM,GAAGD,EAAE,CAAC,CAAD,CAArE;EAAA,IAA0EE,YAAY,GAAGF,EAAE,CAAC,CAAD,CAA3F;;EACA,SAASG,UAAT,GAAsB;IAClBD,YAAY,CAAC,KAAD,CAAZ;EACH;;EACD,SAASE,SAAT,GAAqB;IACjBF,YAAY,CAAC,IAAD,CAAZ;EACH,CAPgB,CAQjB;EACA;;;EACAR,SAAS,CAAC,YAAY;IAClB,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;MAC/BA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,SAAlC;MACAR,MAAM,CAACS,gBAAP,CAAwB,SAAxB,EAAmCF,UAAnC;MACA,OAAO,YAAY;QACfP,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,SAArC;QACAR,MAAM,CAACU,mBAAP,CAA2B,SAA3B,EAAsCH,UAAtC;MACH,CAHD;IAIH,CAPD,MAQK;MACDI,OAAO,CAACC,IAAR,CAAa,iCAAb;IACH;EACJ,CAZQ,EAYN,EAZM,CAAT;EAaA,OAAOP,MAAP;AACH;;AACD,SAASF,SAAT"},"metadata":{},"sourceType":"module"}