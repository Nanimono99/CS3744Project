{"ast":null,"code":"import { useEffect, useRef, useCallback } from \"react\";\n/**\n *  useOutsideClick hook\n * Checks if a click happened outside a Ref. Handy for dropdowns, modals and popups etc.\n *\n * @param ref Ref whose outside click needs to be listened to\n * @param handler Callback to fire on outside click\n * @param when A boolean which which activates the hook only when it is true. Useful for conditionally enable the outside click\n */\n\nfunction useOutsideClick(ref, handler, when) {\n  if (when === void 0) {\n    when = true;\n  }\n\n  var savedHandler = useRef(handler);\n  var memoizedCallback = useCallback(function (e) {\n    if (ref && ref.current && !ref.current.contains(e.target)) {\n      savedHandler.current(e);\n    }\n  }, []);\n  useEffect(function () {\n    savedHandler.current = handler;\n  });\n  useEffect(function () {\n    if (when) {\n      document.addEventListener(\"click\", memoizedCallback, true);\n      document.addEventListener(\"ontouchstart\", memoizedCallback, true);\n      return function () {\n        document.removeEventListener(\"click\", memoizedCallback, true);\n        document.removeEventListener(\"ontouchstart\", memoizedCallback, true);\n      };\n    }\n  }, [ref, handler, when]);\n}\n\nexport { useOutsideClick };","map":{"version":3,"names":["useEffect","useRef","useCallback","useOutsideClick","ref","handler","when","savedHandler","memoizedCallback","e","current","contains","target","document","addEventListener","removeEventListener"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useOutsideClick.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\n/**\n *  useOutsideClick hook\n * Checks if a click happened outside a Ref. Handy for dropdowns, modals and popups etc.\n *\n * @param ref Ref whose outside click needs to be listened to\n * @param handler Callback to fire on outside click\n * @param when A boolean which which activates the hook only when it is true. Useful for conditionally enable the outside click\n */\nfunction useOutsideClick(ref, handler, when) {\n    if (when === void 0) { when = true; }\n    var savedHandler = useRef(handler);\n    var memoizedCallback = useCallback(function (e) {\n        if (ref && ref.current && !ref.current.contains(e.target)) {\n            savedHandler.current(e);\n        }\n    }, []);\n    useEffect(function () {\n        savedHandler.current = handler;\n    });\n    useEffect(function () {\n        if (when) {\n            document.addEventListener(\"click\", memoizedCallback, true);\n            document.addEventListener(\"ontouchstart\", memoizedCallback, true);\n            return function () {\n                document.removeEventListener(\"click\", memoizedCallback, true);\n                document.removeEventListener(\"ontouchstart\", memoizedCallback, true);\n            };\n        }\n    }, [ref, handler, when]);\n}\nexport { useOutsideClick };\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6C;EACzC,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;IAAEA,IAAI,GAAG,IAAP;EAAc;;EACrC,IAAIC,YAAY,GAAGN,MAAM,CAACI,OAAD,CAAzB;EACA,IAAIG,gBAAgB,GAAGN,WAAW,CAAC,UAAUO,CAAV,EAAa;IAC5C,IAAIL,GAAG,IAAIA,GAAG,CAACM,OAAX,IAAsB,CAACN,GAAG,CAACM,OAAJ,CAAYC,QAAZ,CAAqBF,CAAC,CAACG,MAAvB,CAA3B,EAA2D;MACvDL,YAAY,CAACG,OAAb,CAAqBD,CAArB;IACH;EACJ,CAJiC,EAI/B,EAJ+B,CAAlC;EAKAT,SAAS,CAAC,YAAY;IAClBO,YAAY,CAACG,OAAb,GAAuBL,OAAvB;EACH,CAFQ,CAAT;EAGAL,SAAS,CAAC,YAAY;IAClB,IAAIM,IAAJ,EAAU;MACNO,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,gBAAnC,EAAqD,IAArD;MACAK,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,EAA0CN,gBAA1C,EAA4D,IAA5D;MACA,OAAO,YAAY;QACfK,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,gBAAtC,EAAwD,IAAxD;QACAK,QAAQ,CAACE,mBAAT,CAA6B,cAA7B,EAA6CP,gBAA7C,EAA+D,IAA/D;MACH,CAHD;IAIH;EACJ,CATQ,EASN,CAACJ,GAAD,EAAMC,OAAN,EAAeC,IAAf,CATM,CAAT;AAUH;;AACD,SAASH,eAAT"},"metadata":{},"sourceType":"module"}