{"ast":null,"code":"import { useState } from \"react\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nvar nullDimensions = {\n  innerHeight: null,\n  innerWidth: null,\n  outerHeight: null,\n  outerWidth: null\n};\n\nfunction getDimensions() {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth\n  };\n}\n/**\n * useWindowSize hook\n * A hook that provides information of the dimensions of the window\n *\n * @returns Dimensions of the window\n */\n\n\nexport function useWindowSize() {\n  var _a = useState(function () {\n    if (typeof window === \"undefined\") {\n      return nullDimensions;\n    } else {\n      return getDimensions();\n    }\n  }),\n      windowSize = _a[0],\n      setWindowSize = _a[1];\n\n  function onResize() {\n    setWindowSize(getDimensions());\n  } // set resize handler once on mount and clean before unmount\n\n\n  useIsomorphicEffect(function () {\n    if (typeof window === \"undefined\") {\n      return function () {};\n    } else {\n      window.addEventListener(\"resize\", onResize);\n      return function () {\n        window.removeEventListener(\"resize\", onResize);\n      };\n    }\n  }, []);\n  return windowSize;\n}","map":{"version":3,"names":["useState","useIsomorphicEffect","nullDimensions","innerHeight","innerWidth","outerHeight","outerWidth","getDimensions","window","useWindowSize","_a","windowSize","setWindowSize","onResize","addEventListener","removeEventListener"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useWindowSize.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nvar nullDimensions = {\n    innerHeight: null,\n    innerWidth: null,\n    outerHeight: null,\n    outerWidth: null,\n};\nfunction getDimensions() {\n    return {\n        innerHeight: window.innerHeight,\n        innerWidth: window.innerWidth,\n        outerHeight: window.outerHeight,\n        outerWidth: window.outerWidth,\n    };\n}\n/**\n * useWindowSize hook\n * A hook that provides information of the dimensions of the window\n *\n * @returns Dimensions of the window\n */\nexport function useWindowSize() {\n    var _a = useState(function () {\n        if (typeof window === \"undefined\") {\n            return nullDimensions;\n        }\n        else {\n            return getDimensions();\n        }\n    }), windowSize = _a[0], setWindowSize = _a[1];\n    function onResize() {\n        setWindowSize(getDimensions());\n    }\n    // set resize handler once on mount and clean before unmount\n    useIsomorphicEffect(function () {\n        if (typeof window === \"undefined\") {\n            return function () { };\n        }\n        else {\n            window.addEventListener(\"resize\", onResize);\n            return function () {\n                window.removeEventListener(\"resize\", onResize);\n            };\n        }\n    }, []);\n    return windowSize;\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,IAAIC,cAAc,GAAG;EACjBC,WAAW,EAAE,IADI;EAEjBC,UAAU,EAAE,IAFK;EAGjBC,WAAW,EAAE,IAHI;EAIjBC,UAAU,EAAE;AAJK,CAArB;;AAMA,SAASC,aAAT,GAAyB;EACrB,OAAO;IACHJ,WAAW,EAAEK,MAAM,CAACL,WADjB;IAEHC,UAAU,EAAEI,MAAM,CAACJ,UAFhB;IAGHC,WAAW,EAAEG,MAAM,CAACH,WAHjB;IAIHC,UAAU,EAAEE,MAAM,CAACF;EAJhB,CAAP;AAMH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASG,aAAT,GAAyB;EAC5B,IAAIC,EAAE,GAAGV,QAAQ,CAAC,YAAY;IAC1B,IAAI,OAAOQ,MAAP,KAAkB,WAAtB,EAAmC;MAC/B,OAAON,cAAP;IACH,CAFD,MAGK;MACD,OAAOK,aAAa,EAApB;IACH;EACJ,CAPgB,CAAjB;EAAA,IAOII,UAAU,GAAGD,EAAE,CAAC,CAAD,CAPnB;EAAA,IAOwBE,aAAa,GAAGF,EAAE,CAAC,CAAD,CAP1C;;EAQA,SAASG,QAAT,GAAoB;IAChBD,aAAa,CAACL,aAAa,EAAd,CAAb;EACH,CAX2B,CAY5B;;;EACAN,mBAAmB,CAAC,YAAY;IAC5B,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;MAC/B,OAAO,YAAY,CAAG,CAAtB;IACH,CAFD,MAGK;MACDA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,QAAlC;MACA,OAAO,YAAY;QACfL,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,QAArC;MACH,CAFD;IAGH;EACJ,CAVkB,EAUhB,EAVgB,CAAnB;EAWA,OAAOF,UAAP;AACH"},"metadata":{},"sourceType":"module"}