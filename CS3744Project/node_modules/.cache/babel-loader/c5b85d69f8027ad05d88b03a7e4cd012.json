{"ast":null,"code":"/* eslint-disable no-negated-condition */\nimport { useCallback, useState } from \"react\";\n\nfunction warnIfBothValueAndIndexAreProvided(functionName, object) {\n  if (Object.values(object).every(function (v) {\n    return typeof v !== \"undefined\";\n  })) {\n    console.warn(\"\".concat(functionName, \". Expected either \").concat(Object.keys(object).join(\" or \"), \" to be provided. However all were provided\"));\n  } else if (Object.values(object).every(function (v) {\n    return typeof v === \"undefined\";\n  })) {\n    console.warn(\"\".concat(functionName, \". \").concat(Object.keys(object).join(\" , \"), \" are all undefined.\"));\n  }\n}\n/**\n * useSelectableList\n * Easily select a single value from a list of values. very useful for radio buttons, select inputs  etc.\n *\n * @param list\n * @param initialIndex\n * @param allowUnselected\n */\n\n\nfunction useSelectableList(list, initialIndex, allowUnselected) {\n  if (list === void 0) {\n    list = [];\n  }\n\n  if (initialIndex === void 0) {\n    initialIndex = 0;\n  }\n\n  if (allowUnselected === void 0) {\n    allowUnselected = false;\n  }\n\n  var _a = useState(initialIndex),\n      currentIndex = _a[0],\n      setCurrentIndex = _a[1];\n\n  var currentValue = list[currentIndex];\n  var selection = [currentIndex, currentValue];\n  var updateSelection = useCallback(function (_a) {\n    var index = _a.index,\n        value = _a.value;\n    return function () {\n      warnIfBothValueAndIndexAreProvided(\"updateSelection\", {\n        index: index,\n        value: value\n      });\n\n      if (typeof index !== \"undefined\") {\n        setCurrentIndex(index);\n      } else if (typeof value !== \"undefined\") {\n        var valueIndex = list.indexOf(value);\n\n        if (valueIndex > -1) {\n          setCurrentIndex(valueIndex);\n        } else {\n          console.warn(\"updateSelection failed. Does the value \".concat(value, \" exist in the list?\"));\n        }\n      }\n    };\n  }, [list]);\n  var toggleSelection = useCallback(function (_a) {\n    var index = _a.index,\n        value = _a.value;\n    return function () {\n      warnIfBothValueAndIndexAreProvided(\"toggleSelection\", {\n        index: index,\n        value: value\n      });\n\n      if (typeof index !== \"undefined\") {\n        if (currentIndex === index) {\n          if (allowUnselected) {\n            setCurrentIndex(-1);\n          } else {\n            console.warn(\"allowUnselected is false. Cannot unselect item\");\n          }\n        } else {\n          setCurrentIndex(index);\n        }\n      } else if (typeof value !== \"undefined\") {\n        var valueIndex = list.indexOf(value);\n\n        if (valueIndex > -1) {\n          if (currentIndex === valueIndex) {\n            if (allowUnselected) {\n              setCurrentIndex(-1);\n            } else {\n              console.warn(\"allowUnselected is false. Cannot unselect item\");\n            }\n          } else {\n            setCurrentIndex(valueIndex);\n          }\n        } else {\n          console.log(\"as\");\n          console.warn(\"toggleSelection failed. Does the value \".concat(value, \" exist in the list?\"));\n        }\n      }\n    };\n  }, [allowUnselected, currentIndex, list]);\n  var matchSelection = useCallback(function (_a) {\n    var index = _a.index,\n        value = _a.value;\n    warnIfBothValueAndIndexAreProvided(\"matchSelection\", {\n      index: index,\n      value: value\n    });\n\n    if (typeof index !== \"undefined\") {\n      return index === currentIndex;\n    } else {\n      return value === currentValue;\n    }\n  }, [currentIndex, currentValue]);\n  var controls = {\n    matchSelection: matchSelection,\n    toggleSelection: toggleSelection,\n    updateSelection: updateSelection\n  };\n  return [selection, controls];\n}\n\nexport { useSelectableList };","map":{"version":3,"names":["useCallback","useState","warnIfBothValueAndIndexAreProvided","functionName","object","Object","values","every","v","console","warn","concat","keys","join","useSelectableList","list","initialIndex","allowUnselected","_a","currentIndex","setCurrentIndex","currentValue","selection","updateSelection","index","value","valueIndex","indexOf","toggleSelection","log","matchSelection","controls"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useSelectableList.js"],"sourcesContent":["/* eslint-disable no-negated-condition */\nimport { useCallback, useState } from \"react\";\nfunction warnIfBothValueAndIndexAreProvided(functionName, object) {\n    if (Object.values(object).every(function (v) { return typeof v !== \"undefined\"; })) {\n        console.warn(\"\".concat(functionName, \". Expected either \").concat(Object.keys(object).join(\" or \"), \" to be provided. However all were provided\"));\n    }\n    else if (Object.values(object).every(function (v) { return typeof v === \"undefined\"; })) {\n        console.warn(\"\".concat(functionName, \". \").concat(Object.keys(object).join(\" , \"), \" are all undefined.\"));\n    }\n}\n/**\n * useSelectableList\n * Easily select a single value from a list of values. very useful for radio buttons, select inputs  etc.\n *\n * @param list\n * @param initialIndex\n * @param allowUnselected\n */\nfunction useSelectableList(list, initialIndex, allowUnselected) {\n    if (list === void 0) { list = []; }\n    if (initialIndex === void 0) { initialIndex = 0; }\n    if (allowUnselected === void 0) { allowUnselected = false; }\n    var _a = useState(initialIndex), currentIndex = _a[0], setCurrentIndex = _a[1];\n    var currentValue = list[currentIndex];\n    var selection = [currentIndex, currentValue];\n    var updateSelection = useCallback(function (_a) {\n        var index = _a.index, value = _a.value;\n        return function () {\n            warnIfBothValueAndIndexAreProvided(\"updateSelection\", { index: index, value: value });\n            if (typeof index !== \"undefined\") {\n                setCurrentIndex(index);\n            }\n            else if (typeof value !== \"undefined\") {\n                var valueIndex = list.indexOf(value);\n                if (valueIndex > -1) {\n                    setCurrentIndex(valueIndex);\n                }\n                else {\n                    console.warn(\"updateSelection failed. Does the value \".concat(value, \" exist in the list?\"));\n                }\n            }\n        };\n    }, [list]);\n    var toggleSelection = useCallback(function (_a) {\n        var index = _a.index, value = _a.value;\n        return function () {\n            warnIfBothValueAndIndexAreProvided(\"toggleSelection\", { index: index, value: value });\n            if (typeof index !== \"undefined\") {\n                if (currentIndex === index) {\n                    if (allowUnselected) {\n                        setCurrentIndex(-1);\n                    }\n                    else {\n                        console.warn(\"allowUnselected is false. Cannot unselect item\");\n                    }\n                }\n                else {\n                    setCurrentIndex(index);\n                }\n            }\n            else if (typeof value !== \"undefined\") {\n                var valueIndex = list.indexOf(value);\n                if (valueIndex > -1) {\n                    if (currentIndex === valueIndex) {\n                        if (allowUnselected) {\n                            setCurrentIndex(-1);\n                        }\n                        else {\n                            console.warn(\"allowUnselected is false. Cannot unselect item\");\n                        }\n                    }\n                    else {\n                        setCurrentIndex(valueIndex);\n                    }\n                }\n                else {\n                    console.log(\"as\");\n                    console.warn(\"toggleSelection failed. Does the value \".concat(value, \" exist in the list?\"));\n                }\n            }\n        };\n    }, [allowUnselected, currentIndex, list]);\n    var matchSelection = useCallback(function (_a) {\n        var index = _a.index, value = _a.value;\n        warnIfBothValueAndIndexAreProvided(\"matchSelection\", { index: index, value: value });\n        if (typeof index !== \"undefined\") {\n            return index === currentIndex;\n        }\n        else {\n            return value === currentValue;\n        }\n    }, [currentIndex, currentValue]);\n    var controls = {\n        matchSelection: matchSelection,\n        toggleSelection: toggleSelection,\n        updateSelection: updateSelection,\n    };\n    return [selection, controls];\n}\nexport { useSelectableList };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}