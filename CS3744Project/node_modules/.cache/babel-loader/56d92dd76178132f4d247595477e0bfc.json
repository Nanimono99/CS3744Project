{"ast":null,"code":"// Massive respect for Josh Johnston\n// A lot of the logic is taken from his repo -> https://github.com/joshwnj/react-visibility-sensor\n// And is rewritten for hooks api\nimport { useEffect, useReducer } from \"react\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nimport { useWarningOnMountInDevelopment } from \"./useWarningOnMountInDevelopment\";\n\nfunction normalizeRect(rect) {\n  if (rect.width === undefined) {\n    rect.width = rect.right - rect.left;\n  }\n\n  if (rect.height === undefined) {\n    rect.height = rect.bottom - rect.top;\n  }\n\n  return rect;\n}\n\nvar initialState = {\n  isVisible: null,\n  visibilityRect: {}\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"set\":\n      if (state.isVisible === action.payload.isVisible) {\n        return state;\n      }\n\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nvar DEFAULT_OPTIONS = {\n  containment: null,\n  intervalCheck: false,\n  minTopValue: 0,\n  partialVisibility: false,\n  resizeCheck: false,\n  resizeDebounce: 250,\n  resizeThrottle: -1,\n  scrollCheck: true,\n  scrollDebounce: 250,\n  scrollThrottle: -1,\n  shouldCheckOnMount: true\n};\n/**\n * useVisibilitySensor hook\n * Tracks the visibility of a ref\n *\n * @param ref The ref to track visibility of\n * @param opts Options\n */\n\nfunction useVisibilitySensor(ref, options) {\n  useWarningOnMountInDevelopment(\"useVisibilitySensor is deprecated, it will be removed in rooks v7. Please use useInViewRef instead.\");\n  /*\n      Create local state\n    */\n\n  var _a = useReducer(reducer, initialState),\n      localState = _a[0],\n      dispatch = _a[1];\n  /*\n      Get options\n    */\n\n\n  var _b = Object.assign({}, DEFAULT_OPTIONS, options),\n      containment = _b.containment,\n      intervalCheck = _b.intervalCheck,\n      scrollCheck = _b.scrollCheck,\n      shouldCheckOnMount = _b.shouldCheckOnMount,\n      scrollDebounce = _b.scrollDebounce,\n      scrollThrottle = _b.scrollThrottle,\n      resizeCheck = _b.resizeCheck,\n      resizeDebounce = _b.resizeDebounce,\n      resizeThrottle = _b.resizeThrottle,\n      partialVisibility = _b.partialVisibility,\n      minTopValue = _b.minTopValue;\n\n  function getContainer() {\n    return containment || window;\n  }\n  /*\n      Check visibility\n    */\n\n\n  function checkVisibility() {\n    var containmentRect;\n\n    if (containment) {\n      var containmentDOMRect = containment.getBoundingClientRect();\n      containmentRect = {\n        bottom: containmentDOMRect.bottom,\n        left: containmentDOMRect.left,\n        right: containmentDOMRect.right,\n        top: containmentDOMRect.top\n      };\n    } else {\n      containmentRect = {\n        bottom: window.innerHeight || document.documentElement.clientHeight,\n        left: 0,\n        right: window.innerWidth || document.documentElement.clientWidth,\n        top: 0\n      };\n    }\n\n    var rect = normalizeRect(ref.current.getBoundingClientRect());\n    var hasSize = rect.height > 0 && rect.width > 0;\n    var visibilityRect = {\n      bottom: rect.bottom <= containmentRect.bottom,\n      left: rect.left >= containmentRect.left,\n      right: rect.right <= containmentRect.right,\n      top: rect.top >= containmentRect.top\n    };\n    var isVisible = hasSize && visibilityRect.top && visibilityRect.left && visibilityRect.bottom && visibilityRect.right; // check for partial visibility\n\n    if (hasSize && partialVisibility) {\n      var partialVisible = rect.top <= containmentRect.bottom && rect.bottom >= containmentRect.top && rect.left <= containmentRect.right && rect.right >= containmentRect.left; // account for partial visibility on a single edge\n\n      if (typeof partialVisibility === \"string\") {\n        partialVisible = visibilityRect[partialVisibility];\n      } // if we have minimum top visibility set by props, lets check, if it meets the passed value\n      // so if for instance element is at least 200px in viewport, then show it.\n\n\n      isVisible = minTopValue ? partialVisible && rect.top <= containmentRect.bottom - minTopValue : partialVisible;\n    }\n\n    return {\n      isVisible: isVisible,\n      visibilityRect: visibilityRect\n    };\n  }\n\n  function updateIsVisible() {\n    if (!ref.current) {\n      return;\n    }\n\n    var _a = checkVisibility(),\n        isVisible = _a.isVisible,\n        visibilityRect = _a.visibilityRect;\n\n    dispatch({\n      payload: {\n        isVisible: isVisible,\n        visibilityRect: visibilityRect\n      },\n      type: \"set\"\n    });\n  } // run only once, hence empty array as second argument\n\n\n  useEffect(function () {\n    if (shouldCheckOnMount) {\n      updateIsVisible();\n    }\n  }, []);\n  useEffect(function () {\n    updateIsVisible();\n  }, [ref.current]); // If interval check is needed\n\n  useEffect(function () {\n    if (intervalCheck && intervalCheck > 0) {\n      var intervalTimer_1 = setInterval(function () {\n        updateIsVisible();\n      }, intervalCheck);\n      return function () {\n        clearInterval(intervalTimer_1);\n      };\n    }\n  }, [intervalCheck]);\n\n  function createListener(event, debounce, throttle) {\n    var container = getContainer();\n    var timeout;\n    var listener;\n\n    var later = function () {\n      timeout = null;\n      updateIsVisible();\n    };\n\n    if (throttle > -1) {\n      listener = function () {\n        if (!timeout) {\n          timeout = setTimeout(later, throttle || 0);\n        }\n      };\n    } else {\n      listener = function () {\n        clearTimeout(timeout);\n        timeout = setTimeout(later, debounce || 0);\n      };\n    }\n\n    container.addEventListener(event, listener);\n    return function () {\n      clearTimeout(timeout);\n      container.removeEventListener(event, listener);\n    };\n  } // If scroll check is needed\n\n\n  useIsomorphicEffect(function () {\n    if (scrollCheck) {\n      return createListener(\"scroll\", scrollDebounce, scrollThrottle);\n    }\n  }, []); // if resize check is needed\n\n  useIsomorphicEffect(function () {\n    if (resizeCheck) {\n      return createListener(\"resize\", resizeDebounce, resizeThrottle);\n    }\n  }, []);\n  return localState;\n}\n\nexport { useVisibilitySensor };","map":{"version":3,"names":["useEffect","useReducer","useIsomorphicEffect","useWarningOnMountInDevelopment","normalizeRect","rect","width","undefined","right","left","height","bottom","top","initialState","isVisible","visibilityRect","reducer","state","action","type","payload","DEFAULT_OPTIONS","containment","intervalCheck","minTopValue","partialVisibility","resizeCheck","resizeDebounce","resizeThrottle","scrollCheck","scrollDebounce","scrollThrottle","shouldCheckOnMount","useVisibilitySensor","ref","options","_a","localState","dispatch","_b","Object","assign","getContainer","window","checkVisibility","containmentRect","containmentDOMRect","getBoundingClientRect","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","current","hasSize","partialVisible","updateIsVisible","intervalTimer_1","setInterval","clearInterval","createListener","event","debounce","throttle","container","timeout","listener","later","setTimeout","clearTimeout","addEventListener","removeEventListener"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useVisibilitySensor.js"],"sourcesContent":["// Massive respect for Josh Johnston\n// A lot of the logic is taken from his repo -> https://github.com/joshwnj/react-visibility-sensor\n// And is rewritten for hooks api\nimport { useEffect, useReducer } from \"react\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nimport { useWarningOnMountInDevelopment } from \"./useWarningOnMountInDevelopment\";\nfunction normalizeRect(rect) {\n    if (rect.width === undefined) {\n        rect.width = rect.right - rect.left;\n    }\n    if (rect.height === undefined) {\n        rect.height = rect.bottom - rect.top;\n    }\n    return rect;\n}\nvar initialState = { isVisible: null, visibilityRect: {} };\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"set\":\n            if (state.isVisible === action.payload.isVisible) {\n                return state;\n            }\n            return action.payload;\n        default:\n            return state;\n    }\n}\nvar DEFAULT_OPTIONS = {\n    containment: null,\n    intervalCheck: false,\n    minTopValue: 0,\n    partialVisibility: false,\n    resizeCheck: false,\n    resizeDebounce: 250,\n    resizeThrottle: -1,\n    scrollCheck: true,\n    scrollDebounce: 250,\n    scrollThrottle: -1,\n    shouldCheckOnMount: true,\n};\n/**\n * useVisibilitySensor hook\n * Tracks the visibility of a ref\n *\n * @param ref The ref to track visibility of\n * @param opts Options\n */\nfunction useVisibilitySensor(ref, options) {\n    useWarningOnMountInDevelopment(\"useVisibilitySensor is deprecated, it will be removed in rooks v7. Please use useInViewRef instead.\");\n    /*\n        Create local state\n      */\n    var _a = useReducer(reducer, initialState), localState = _a[0], dispatch = _a[1];\n    /*\n        Get options\n      */\n    var _b = Object.assign({}, DEFAULT_OPTIONS, options), containment = _b.containment, intervalCheck = _b.intervalCheck, scrollCheck = _b.scrollCheck, shouldCheckOnMount = _b.shouldCheckOnMount, scrollDebounce = _b.scrollDebounce, scrollThrottle = _b.scrollThrottle, resizeCheck = _b.resizeCheck, resizeDebounce = _b.resizeDebounce, resizeThrottle = _b.resizeThrottle, partialVisibility = _b.partialVisibility, minTopValue = _b.minTopValue;\n    function getContainer() {\n        return containment || window;\n    }\n    /*\n        Check visibility\n      */\n    function checkVisibility() {\n        var containmentRect;\n        if (containment) {\n            var containmentDOMRect = containment.getBoundingClientRect();\n            containmentRect = {\n                bottom: containmentDOMRect.bottom,\n                left: containmentDOMRect.left,\n                right: containmentDOMRect.right,\n                top: containmentDOMRect.top,\n            };\n        }\n        else {\n            containmentRect = {\n                bottom: window.innerHeight || document.documentElement.clientHeight,\n                left: 0,\n                right: window.innerWidth || document.documentElement.clientWidth,\n                top: 0,\n            };\n        }\n        var rect = normalizeRect(ref.current.getBoundingClientRect());\n        var hasSize = rect.height > 0 && rect.width > 0;\n        var visibilityRect = {\n            bottom: rect.bottom <= containmentRect.bottom,\n            left: rect.left >= containmentRect.left,\n            right: rect.right <= containmentRect.right,\n            top: rect.top >= containmentRect.top,\n        };\n        var isVisible = hasSize &&\n            visibilityRect.top &&\n            visibilityRect.left &&\n            visibilityRect.bottom &&\n            visibilityRect.right;\n        // check for partial visibility\n        if (hasSize && partialVisibility) {\n            var partialVisible = rect.top <= containmentRect.bottom &&\n                rect.bottom >= containmentRect.top &&\n                rect.left <= containmentRect.right &&\n                rect.right >= containmentRect.left;\n            // account for partial visibility on a single edge\n            if (typeof partialVisibility === \"string\") {\n                partialVisible = visibilityRect[partialVisibility];\n            }\n            // if we have minimum top visibility set by props, lets check, if it meets the passed value\n            // so if for instance element is at least 200px in viewport, then show it.\n            isVisible = minTopValue\n                ? partialVisible && rect.top <= containmentRect.bottom - minTopValue\n                : partialVisible;\n        }\n        return { isVisible: isVisible, visibilityRect: visibilityRect };\n    }\n    function updateIsVisible() {\n        if (!ref.current) {\n            return;\n        }\n        var _a = checkVisibility(), isVisible = _a.isVisible, visibilityRect = _a.visibilityRect;\n        dispatch({\n            payload: { isVisible: isVisible, visibilityRect: visibilityRect },\n            type: \"set\",\n        });\n    }\n    // run only once, hence empty array as second argument\n    useEffect(function () {\n        if (shouldCheckOnMount) {\n            updateIsVisible();\n        }\n    }, []);\n    useEffect(function () {\n        updateIsVisible();\n    }, [ref.current]);\n    // If interval check is needed\n    useEffect(function () {\n        if (intervalCheck && intervalCheck > 0) {\n            var intervalTimer_1 = setInterval(function () {\n                updateIsVisible();\n            }, intervalCheck);\n            return function () {\n                clearInterval(intervalTimer_1);\n            };\n        }\n    }, [intervalCheck]);\n    function createListener(event, debounce, throttle) {\n        var container = getContainer();\n        var timeout;\n        var listener;\n        var later = function () {\n            timeout = null;\n            updateIsVisible();\n        };\n        if (throttle > -1) {\n            listener = function () {\n                if (!timeout) {\n                    timeout = setTimeout(later, throttle || 0);\n                }\n            };\n        }\n        else {\n            listener = function () {\n                clearTimeout(timeout);\n                timeout = setTimeout(later, debounce || 0);\n            };\n        }\n        container.addEventListener(event, listener);\n        return function () {\n            clearTimeout(timeout);\n            container.removeEventListener(event, listener);\n        };\n    }\n    // If scroll check is needed\n    useIsomorphicEffect(function () {\n        if (scrollCheck) {\n            return createListener(\"scroll\", scrollDebounce, scrollThrottle);\n        }\n    }, []);\n    // if resize check is needed\n    useIsomorphicEffect(function () {\n        if (resizeCheck) {\n            return createListener(\"resize\", resizeDebounce, resizeThrottle);\n        }\n    }, []);\n    return localState;\n}\nexport { useVisibilitySensor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}