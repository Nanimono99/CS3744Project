{"ast":null,"code":"import { useState } from \"react\";\nimport { useIntervalWhen } from \"./useIntervalWhen\";\n/**\n *\n * useCountdown\n * Easy way to countdown until a given endtime in intervals\n *\n * @param endTime Time to countdown\n * @param options  Countdown options\n */\n\nfunction useCountdown(endTime, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.interval,\n      interval = _a === void 0 ? 1000 : _a,\n      onDown = options.onDown,\n      onEnd = options.onEnd;\n\n  var _b = useState(function () {\n    return new Date();\n  }),\n      time = _b[0],\n      setTime = _b[1];\n\n  var restTime = endTime.getTime() - time.getTime();\n  var count = restTime > 0 ? Math.ceil(restTime / interval) : 0;\n  useIntervalWhen(onTick, count ? interval : undefined, true, true);\n  return count;\n\n  function onTick() {\n    var newTime = new Date();\n\n    if (newTime > endTime) {\n      if (onEnd) {\n        onEnd(newTime);\n      }\n\n      setTime(endTime);\n      return;\n    }\n\n    if (onDown) {\n      onDown(restTime, newTime);\n    }\n\n    setTime(newTime);\n  }\n}\n\nexport { useCountdown };","map":{"version":3,"names":["useState","useIntervalWhen","useCountdown","endTime","options","_a","interval","onDown","onEnd","_b","Date","time","setTime","restTime","getTime","count","Math","ceil","onTick","undefined","newTime"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useCountdown.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useIntervalWhen } from \"./useIntervalWhen\";\n/**\n *\n * useCountdown\n * Easy way to countdown until a given endtime in intervals\n *\n * @param endTime Time to countdown\n * @param options  Countdown options\n */\nfunction useCountdown(endTime, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.interval, interval = _a === void 0 ? 1000 : _a, onDown = options.onDown, onEnd = options.onEnd;\n    var _b = useState(function () { return new Date(); }), time = _b[0], setTime = _b[1];\n    var restTime = endTime.getTime() - time.getTime();\n    var count = restTime > 0 ? Math.ceil(restTime / interval) : 0;\n    useIntervalWhen(onTick, count ? interval : undefined, true, true);\n    return count;\n    function onTick() {\n        var newTime = new Date();\n        if (newTime > endTime) {\n            if (onEnd) {\n                onEnd(newTime);\n            }\n            setTime(endTime);\n            return;\n        }\n        if (onDown) {\n            onDown(restTime, newTime);\n        }\n        setTime(newTime);\n    }\n}\nexport { useCountdown };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;EACpC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,EAAE,GAAGD,OAAO,CAACE,QAAjB;EAAA,IAA2BA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA7D;EAAA,IAAiEE,MAAM,GAAGH,OAAO,CAACG,MAAlF;EAAA,IAA0FC,KAAK,GAAGJ,OAAO,CAACI,KAA1G;;EACA,IAAIC,EAAE,GAAGT,QAAQ,CAAC,YAAY;IAAE,OAAO,IAAIU,IAAJ,EAAP;EAAoB,CAAnC,CAAjB;EAAA,IAAuDC,IAAI,GAAGF,EAAE,CAAC,CAAD,CAAhE;EAAA,IAAqEG,OAAO,GAAGH,EAAE,CAAC,CAAD,CAAjF;;EACA,IAAII,QAAQ,GAAGV,OAAO,CAACW,OAAR,KAAoBH,IAAI,CAACG,OAAL,EAAnC;EACA,IAAIC,KAAK,GAAGF,QAAQ,GAAG,CAAX,GAAeG,IAAI,CAACC,IAAL,CAAUJ,QAAQ,GAAGP,QAArB,CAAf,GAAgD,CAA5D;EACAL,eAAe,CAACiB,MAAD,EAASH,KAAK,GAAGT,QAAH,GAAca,SAA5B,EAAuC,IAAvC,EAA6C,IAA7C,CAAf;EACA,OAAOJ,KAAP;;EACA,SAASG,MAAT,GAAkB;IACd,IAAIE,OAAO,GAAG,IAAIV,IAAJ,EAAd;;IACA,IAAIU,OAAO,GAAGjB,OAAd,EAAuB;MACnB,IAAIK,KAAJ,EAAW;QACPA,KAAK,CAACY,OAAD,CAAL;MACH;;MACDR,OAAO,CAACT,OAAD,CAAP;MACA;IACH;;IACD,IAAII,MAAJ,EAAY;MACRA,MAAM,CAACM,QAAD,EAAWO,OAAX,CAAN;IACH;;IACDR,OAAO,CAACQ,OAAD,CAAP;EACH;AACJ;;AACD,SAASlB,YAAT"},"metadata":{},"sourceType":"module"}