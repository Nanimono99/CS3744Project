{"ast":null,"code":"import { useState } from \"react\";\nimport { useDebounce } from \"./useDebounce\";\nimport { useDidMount } from \"./useDidMount\";\nimport { useDidUpdate } from \"./useDidUpdate\";\nvar defaultUseDebounceValueOptions = {\n  initializeWithNull: false\n};\nexport var useDebouncedValue = function (value, timeout, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var initializeWithNull = Object.assign({}, defaultUseDebounceValueOptions, options).initializeWithNull;\n\n  var _a = useState(initializeWithNull ? null : value),\n      updatedValue = _a[0],\n      setUpdatedValue = _a[1];\n\n  var debouncedSetUpdatedValue = useDebounce(setUpdatedValue, timeout);\n  useDidMount(function () {\n    if (initializeWithNull) {\n      debouncedSetUpdatedValue(value);\n    }\n  });\n  useDidUpdate(function () {\n    debouncedSetUpdatedValue(value);\n  }, [value]); // No need to add `debouncedSetUpdatedValue ` to dependencies as it is a ref.current.\n  // returning both updatedValue and setUpdatedValue (not the debounced version) to instantly update this if  needed.\n\n  return [updatedValue, setUpdatedValue];\n};","map":{"version":3,"names":["useState","useDebounce","useDidMount","useDidUpdate","defaultUseDebounceValueOptions","initializeWithNull","useDebouncedValue","value","timeout","options","Object","assign","_a","updatedValue","setUpdatedValue","debouncedSetUpdatedValue"],"sources":["C:/Users/ASUS/Desktop/ReactRouter2/ReactRouter/node_modules/rooks/dist/esm/hooks/useDebouncedValue.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDebounce } from \"./useDebounce\";\nimport { useDidMount } from \"./useDidMount\";\nimport { useDidUpdate } from \"./useDidUpdate\";\nvar defaultUseDebounceValueOptions = {\n    initializeWithNull: false,\n};\nexport var useDebouncedValue = function (value, timeout, options) {\n    if (options === void 0) { options = {}; }\n    var initializeWithNull = Object.assign({}, defaultUseDebounceValueOptions, options).initializeWithNull;\n    var _a = useState(initializeWithNull ? null : value), updatedValue = _a[0], setUpdatedValue = _a[1];\n    var debouncedSetUpdatedValue = useDebounce(setUpdatedValue, timeout);\n    useDidMount(function () {\n        if (initializeWithNull) {\n            debouncedSetUpdatedValue(value);\n        }\n    });\n    useDidUpdate(function () {\n        debouncedSetUpdatedValue(value);\n    }, [value]);\n    // No need to add `debouncedSetUpdatedValue ` to dependencies as it is a ref.current.\n    // returning both updatedValue and setUpdatedValue (not the debounced version) to instantly update this if  needed.\n    return [updatedValue, setUpdatedValue];\n};\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,IAAIC,8BAA8B,GAAG;EACjCC,kBAAkB,EAAE;AADa,CAArC;AAGA,OAAO,IAAIC,iBAAiB,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;EAC9D,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIJ,kBAAkB,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,8BAAlB,EAAkDK,OAAlD,EAA2DJ,kBAApF;;EACA,IAAIO,EAAE,GAAGZ,QAAQ,CAACK,kBAAkB,GAAG,IAAH,GAAUE,KAA7B,CAAjB;EAAA,IAAsDM,YAAY,GAAGD,EAAE,CAAC,CAAD,CAAvE;EAAA,IAA4EE,eAAe,GAAGF,EAAE,CAAC,CAAD,CAAhG;;EACA,IAAIG,wBAAwB,GAAGd,WAAW,CAACa,eAAD,EAAkBN,OAAlB,CAA1C;EACAN,WAAW,CAAC,YAAY;IACpB,IAAIG,kBAAJ,EAAwB;MACpBU,wBAAwB,CAACR,KAAD,CAAxB;IACH;EACJ,CAJU,CAAX;EAKAJ,YAAY,CAAC,YAAY;IACrBY,wBAAwB,CAACR,KAAD,CAAxB;EACH,CAFW,EAET,CAACA,KAAD,CAFS,CAAZ,CAV8D,CAa9D;EACA;;EACA,OAAO,CAACM,YAAD,EAAeC,eAAf,CAAP;AACH,CAhBM"},"metadata":{},"sourceType":"module"}